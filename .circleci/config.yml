version: 2.1

references:
  test_and_build_container: &test_and_build_container
    docker:
      - image: circleci/php:8.0-node-browsers-legacy
      - image: circleci/mysql:8.0
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circle_test

    working_directory: ~/summer-2021-hotel-management # directory where steps will run

  setup_remote_docker: &setup_remote_docker
    setup_remote_docker:
      version: 18.09.3

  install_php_extension: &install_php_extension
    run:
      name: Install php extension
      command: |
        sudo docker-php-ext-install zip
        sudo docker-php-ext-install pdo_mysql
        sudo apt-get install libpng-dev
        sudo -E docker-php-ext-install -j$(nproc) gd

  restore_cache_composer_lock: &restore_cache_composer_lock
    restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
      keys:
        - composer-v1-{{ checksum "composer.lock" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - composer-v1-

  install_composer_and_copy_env: &install_composer_and_copy_env
    run:
      name: Install composer
      command: |
        cp environments/.env.testing .env
        composer install -n --prefer-dist

  save_cache_composer_lock: &save_cache_composer_lock
    save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
      key: composer-v1-{{ checksum "composer.lock" }}
      paths:
        - vendor

  restore_cache_package_json: &restore_cache_package_json
    restore_cache: # special step to restore the dependency cache if `package.json` does not change
      keys:
        - node-v1-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - node-v1-

  save_cache_package_json: &save_cache_package_json
    save_cache: # special step to save the dependency cache with the `package.json` cache key template
      key: node-v1-{{ checksum "package.json" }}
      paths:
        - node_modules

  set_permission: &set_permission
    run:
      name: Set permission storage folder
      command: |
        chmod -R 777 storage

  check_coding_standard: &check_coding_standard
    run:
      name: Check coding standard
      no_output_timeout: 15m
      command: |
        ./vendor/bin/phpcs -n -d memory_limit=-1 --standard=phpcs.xml
        ./vendor/bin/phpmd app text phpmd.xml

jobs:
  build_and_test:
    <<: *test_and_build_container
    steps:
      - checkout
      - <<: *setup_remote_docker
      - <<: *install_php_extension
      - <<: *restore_cache_composer_lock
      - <<: *install_composer_and_copy_env
      - <<: *save_cache_composer_lock
      - <<: *restore_cache_package_json
      - <<: *save_cache_package_json
      - <<: *set_permission
      - <<: *check_coding_standard

workflows:
  version: 2
  hotel_api_workflows:
    jobs:
      - build_and_test
